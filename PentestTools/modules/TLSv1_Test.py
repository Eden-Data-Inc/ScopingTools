import argparse
from PentestTools.result import TestResult
import ssl
import socket

#Name your Check
check_name = "TLSv1 in Use"

def parse_args(args):
    parser = argparse.ArgumentParser(description='TLSv1 Test')
    # Standard Parameters (DO NOT MODIFY)
    parser.add_argument('-t', '--target', required=True, help='Target IP address')    
    # Custom Argument (CUSTOMIZE TO YOUR MODULE's NEEDS)
    parser.add_argument('-v', '--verbose', required=False, help='Verbose output, useful for debugging')    
    return parser.parse_args(args)

def run(args):
    parsed_args = parse_args(args)
    
    #print(f"Running TLSv1 test against target: {parsed_args.target}")
    
    target = parsed_args.target
    port = 443  # Default HTTPS port
    
    context = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
    context.verify_mode = ssl.CERT_NONE
    
    try:
        with socket.create_connection((target, port)) as sock:
            with context.wrap_socket(sock, server_hostname=target) as ssock:
                #print(f"TLSv1 is supported on {target}:{port}")
                results = [TestResult(target=target, check=check_name, status="vulnerable", details={"protocol": "TLSv1"})]
    except ssl.SSLError as e:
        #print(f"TLSv1 is not supported on {target}:{port}")
        results = [TestResult(target=target, check=check_name, status="not vulnerable", details={"protocol": "TLSv1", "error": str(e)})]
    except Exception as e:
        #print(f"An error occurred while testing {target}:{port}")
        results = [TestResult(target=target, check=check_name, status="error", details={"error": str(e)})]
    
    return results
