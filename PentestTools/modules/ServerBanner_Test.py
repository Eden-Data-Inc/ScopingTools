import argparse
from PentestTools.result import TestResult
import requests
from tqdm import tqdm

#Name your Check
check_name = "Server Banner"

def parse_args(args):
    parser = argparse.ArgumentParser(description='Check for Server Banner')
    # Standard Parameters (DO NOT MODIFY)
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-t', '--target', help='Target hostname')
    group.add_argument('-f', '--target-file', help='Target file')
    # Custom Argument (CUSTOMIZE TO YOUR MODULE's NEEDS)
    parser.add_argument('-v', '--verbose', required=False, help='Verbose output, useful for debugging')
    return parser.parse_args(args)


def run(args):
    parsed_args = parse_args(args)
    
    results = []
    
    if parsed_args.target:
        hostnames = [parsed_args.target]
    elif parsed_args.target_file:
        with open(parsed_args.target_file, 'r') as file:
            hostnames = [line.strip() for line in file if line.strip()]
    else:
        return results  # No targets provided, return empty results

    for hostname in tqdm(hostnames, desc="Processing hostnames"):
        try:
            response = requests.get(f"https://{hostname}")
            if 'Server' in response.headers:
                status = "vulnerable"
                details = {"Server": response.headers['Server']}
            else:
                status = "not vulnerable"
                details = {"Server": "Not found"}
        except Exception as e:            
            details = {"error": str(e)}
            status = "error"
        results.append(TestResult(target=hostname, check=check_name, status=status, details=details))
    
    return results
